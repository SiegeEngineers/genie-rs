# https://nbsoftsolutions.com/blog/azure-pipelines-for-rust-projects
strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
    mac-stable:
      imageName: 'macos-10.13'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable
    linux-beta:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: beta
    linux-nightly:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: nightly

pool:
  vmImage: $(imageName)

steps:
  - bash: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - bash: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - bash: cargo build --all
    displayName: Cargo build
  - bash: cargo test --all
    displayName: Cargo test
  - bash: |
      cargo build -p cgenie-drs --release
      cargo build -p cgenie-hki --release
      cargo build -p cgenie-lang --release
      cargo build -p cgenie-scx --release
      cargo build -p cgenie --release
      mkdir -p artifact-release/libs/
      cp -R c/include artifact-release/
      cp target/release/*.dll artifact-release/libs/
    displayName: Prepare C API libraries
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - publish: artifact-release
    artifact: cgenie
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
